---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: "${TOWER_NAMESPACE}"
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: "mysql:8.0"
          name: mysql
          env:
            - name: "MYSQL_ALLOW_EMPTY_PASSWORD"
              value: "yes"
            - name: 'MYSQL_ROOT_PASSWORD'
              value: "${TOWER_DB_ADMIN_PASSWORD}"
            - name: 'MYSQL_DATABASE'
              value: "${TOWER_DB_SCHEMA}"
          ports:
            - containerPort: 3306
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: "${TOWER_NAMESPACE}"
  labels:
    app: mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: "${TOWER_NAMESPACE}"
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis:6.0
          name: redis
          args:
            - --appendonly yes
          ports:
            - containerPort: 6379
      volumes:
        - name: host-sys
          hostPath:
            path: /sys
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: "${TOWER_NAMESPACE}"
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smtp
  namespace: "${TOWER_NAMESPACE}"
  labels:
    app: smtp
spec:
  selector:
    matchLabels:
      app: smtp
  template:
    metadata:
      labels:
        app: smtp
    spec:
      containers:
        - image: maildev/maildev
          name: smtp
          env:
            - name: "MAILDEV_INCOMING_USER"
              value: "foo"
            - name: "MAILDEV_INCOMING_PASS"
              value: "foo"
          ports:
            - containerPort: 1025
            - containerPort: 1080
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: smtp
  namespace: "${TOWER_NAMESPACE}"
  labels:
    app: smtp
spec:
  ports:
    - port: 25
      targetPort: 1025
  type: ClusterIP
  selector:
    app: "smtp"
...
